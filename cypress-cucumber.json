{
    "Cypress: Type Reference": {
        "prefix": "cyref",
        "body": [
            "/// <reference types=\"cypress\" />"
        ],
        "description": "Cypress Type Reference"
    },
    "Cypress: add getData command": {
        "prefix": "cyadd-get",
        "body": [
            "Cypress.Commands.add('getData', (attribute) => {",
            "  return cy.get(`[data-test=\"\\${attribute}\"]`);",
            "});$0"
        ],
        "description": "Cypress Command to get data-test selector"
    },
    "Cypress: on-task plugin": {
        "prefix": "cyplugin",
        "body": [
            "const plugins = (on) => {",
            "  on('task', {",
            "    $0",
            "  });",
            "};",
            "",
            "export default plugins;"
        ],
        "description": "Cypress: on-task plugin"
    },
    "Cypress: data table rows for-each": {
        "prefix": "cytrfe",
        "body": [
            "dt.rows().forEach((row) => {",
            "    $0",
            "});"
        ],
        "description": "Cypress: data table rows for-each"
    },
    "Cypress: data table hashes for-each": {
        "prefix": "cythfe",
        "body": [
            "dt.hashes().forEach((row) => {",
            "    $0",
            "});"
        ],
        "description": "Cypress: data table hashes for-each"
    },
    "Cypress: window": {
        "prefix": "cywin",
        "body": [
            "cy.window().then((win) => {",
            "    $0",
            "});"
        ],
        "description": "Cypress: window"
    },
    "Cypress: Cucumber config": {
        "prefix": "cycuconfig",
        "body": [
            "import { defineConfig } from \"cypress\";",
            "import createBundler from \"@bahmutov/cypress-esbuild-preprocessor\";",
            "import { addCucumberPreprocessorPlugin } from \"@badeball/cypress-cucumber-preprocessor\";",
            "import { createEsbuildPlugin } from \"@badeball/cypress-cucumber-preprocessor/esbuild\";",
            "",
            "async function setupNodeEvents(",
            "    on: Cypress.PluginEvents,",
            "    config: Cypress.PluginConfigOptions",
            "): Promise<Cypress.PluginConfigOptions> {",
            "    await addCucumberPreprocessorPlugin(on, config);",
            "",
            "    on(",
            "        \"file:preprocessor\",",
            "        createBundler({ plugins: [createEsbuildPlugin(config)] })",
            "    );",
            "",
            "    return config;",
            "}",
            "",
            "export default defineConfig({",
            "    e2e: {",
            "        specPattern: \"**/*.feature\",",
            "        setupNodeEvents,",
            "    },",
            "});",
            ""
        ],
        "description": "Cypress: Cucumber config"
    },
    "Gherkin: Given": {
        "prefix": "gg",
        "body": [
            "Given('$1', () => {",
            "    cy.pending();$0",
            "});"
        ],
        "description": "Gherkin: Given"
    },
    "Gherkin: When": {
        "prefix": "gw",
        "body": [
            "When('$1', () => {",
            "    cy.pending();$0",
            "});"
        ],
        "description": "Gherkin: When"
    },
    "Gherkin: Then": {
        "prefix": "gt",
        "body": [
            "Then('$1', () => {",
            "    cy.pending();$0",
            "});"
        ],
        "description": "Gherkin: Then"
    }
}